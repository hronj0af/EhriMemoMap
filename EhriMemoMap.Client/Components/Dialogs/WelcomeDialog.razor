@inject IStringLocalizer<CommonResources> cl
@inject DialogService DialogService
@inject IJSRuntime JS
@inject MapStateService MapState

    @if (!MapState.IsMobileView)
    {
        <RadzenRow>

            <RadzenColumn Size="6" Style="background-color:var(--Wine-Red);color:var(--Beige)">
                <div style="padding:1.5rem">
                    <h1 style="padding-bottom:10px;font-size:48px;">MemoMap</h1>
                    <div style="font-size:15px;padding-bottom:10px">
                    @((MarkupString)cl["welcomeText_" + MapState?.Map?.InitialVariables?.City].ToString())
                    </div>
                    <RadzenButton Click="OnClose" Style="text-transform: none;" ButtonStyle="ButtonStyle.Dark" Variant="Variant.Outlined">@cl["goToMap"]</RadzenButton>
                </div>
            </RadzenColumn>
            <RadzenColumn Size="6" Style="color:var(--Grey)">
                <div style="padding:1.5rem">
                    <h1 style="padding-bottom:10px;padding-top:15px;">@cl["city_" + MapState?.Map?.InitialVariables?.City]</h1>
                    <WelcomeDialogStatisticsTable />
                    <div style="font-size:12px;color:var(--Wine-Red)">@cl["useNavigation"]</div>
                </div>
            </RadzenColumn>
        </RadzenRow>
    }
    else
    {
        <RadzenRow>

            <RadzenColumn Size="12" Style="color:var(--Grey))">
                <div style="padding:1.5rem">
                    <h1 style="padding-bottom:10px;font-size:48px;">MemoMap</h1>
                    <div style="font-size:12px;">
                    @((MarkupString)cl["welcomeText_" + MapState?.Map?.InitialVariables?.City].ToString())
                </div>
                </div>
                <div style="padding:1.5rem">
                <WelcomeDialogStatisticsTable />
                <RadzenButton class="rz-mt-4" ButtonStyle="ButtonStyle.Primary" Click="OnClose" Variant="Variant.Outlined">@cl["goToMap"]</RadzenButton>
                </div>
            </RadzenColumn>
        </RadzenRow>

    }


@code {

    private async Task OnClose()
    {
        DialogService.CloseSide();
        DialogService.Close();
        await MapState.ToggleDialog(DialogTypeEnum.None);
        await JS.InvokeVoidAsync("mapAPI.unselectAllSelectedPoints");
    }

}