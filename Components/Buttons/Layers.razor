@using EhriMemoMap.Helpers;
@inject IJSRuntime JS
@inject IHttpClientFactory clientFactory
@inject DialogService DialogService
@inject MapStateService MapState
@inject MapLogicService MapLogic

@inject IStringLocalizer<CommonResources> cl

<div class="icon @(MapState.DialogType == DialogTypeEnum.Layers ? "icon-layers-selected" : "icon-layers")" title="@(cl["layers"] + "...")" onclick="@(() => ShowLayersList())"></div>

@code {
    private int width;

    IEnumerable<LayerModel>? layers;

    protected override async Task OnInitializedAsync()
    {
        width = await JS.InvokeAsync<int>("mapAPI.getWindowWidth");
        MapState.OnChange += OnMyChangeHandler;
    }

    public void Dispose()
    {
        MapState.OnChange -= OnMyChangeHandler;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            StateHasChanged();
        }
    }


    private async void OnMyChangeHandler()
    {
        await InvokeAsync(() =>
        {
            layers = MapState.GetNotBaseLayers().ToList();
            StateHasChanged();
        });
    }

    private async Task ShowLayersList()
    {
        if (MapState.DialogType == DialogTypeEnum.Layers)
        {
            MapState.SetDialogType(DialogTypeEnum.None);
            DialogService.CloseSide();
        }
        else
        {
            MapState.SetDialogType(DialogTypeEnum.Layers);
            await DialogService.OpenSideAsync<LayersList>(cl["layerInfo"], options: MapState.GetDialogOptions());
        }
    }
}