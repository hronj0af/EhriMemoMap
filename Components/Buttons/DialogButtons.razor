@inject DialogService DialogService
@inject IJSRuntime JS
@inject MapStateService MapState

<RadzenRow JustifyContent="JustifyContent.End">
    @* <RadzenButton Click=OnFullscreen Icon="fullscreen" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"/> *@
    <RadzenButton Click=OnClose Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" />
</RadzenRow>

@code {

    private async Task OnClose()
    {
        await JS.InvokeVoidAsync("mapAPI.removeAdditionalObjects");
        DialogService.CloseSide();
        MapState.SetDialogType(DialogTypeEnum.None);
    }

    private async Task OnFullscreen()
    {
        MapState.SetDialogIsFullscreen(!MapState.DialogIsFullscreen);
        await JS.InvokeVoidAsync("mapAPI.fullscreenDialog", MapState.DialogIsFullscreen);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("mapAPI.fullscreenDialog", MapState.DialogIsFullscreen);
    }
}