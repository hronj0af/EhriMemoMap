@inject MapStateService MapState

@if (!string.IsNullOrEmpty(style))
{
    <div id="controlButtonsWrapper" style="@style">
        @if (isMobileBrowser == false)
        {
            <RadzenRow Gap="0" RowGap="5px" JustifyContent="justifyContent" AlignItems="AlignItems.Center">
                <RadzenColumn Size="12">
                    <Home />
                </RadzenColumn>
                <RadzenColumn Size="12">
                    <Search />
                </RadzenColumn>
                <RadzenColumn Size="12">
                    <Layers />
                </RadzenColumn>
                <RadzenColumn Size="12">
                    <Help />
                </RadzenColumn>
                <RadzenColumn Size="12">
                    <Language />
                </RadzenColumn>
            </RadzenRow>

        }
        else
        {
            <RadzenRow Gap="0" JustifyContent="justifyContent" AlignItems="AlignItems.Center">
                <RadzenColumn Size="4" >
                    <Search MobileVersion="true" Border="true" />
                </RadzenColumn>
                <RadzenColumn Size="4" >
                    <Timeline MobileVersion="true" Border="true" />
                </RadzenColumn>
                <RadzenColumn Size="4">
                    <Layers MobileVersion="true" />
                </RadzenColumn>
            </RadzenRow>

        }
    </div>

}

@code {
    public string style;
    public string gap;
    public JustifyContent justifyContent;
    public bool? isMobileBrowser;

    protected override async Task OnInitializedAsync()
    {
        MapState.OnChange += OnMyChangeHandler;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            isMobileBrowser = MapState.IsMobileBrowser;
            justifyContent = MapState.IsMobileBrowser ? JustifyContent.Center : JustifyContent.End;
            style = GetStyle();
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        MapState.OnChange -= OnMyChangeHandler;
    }

    private async void OnMyChangeHandler()
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public string GetStyle()
    {
        if (MapState.IsMobileBrowser)
            return $"position:absolute;{(MapState.DialogType != DialogTypeEnum.None && MapState.DialogType != DialogTypeEnum.Help ? $"bottom:{MapState.HeightOfDialog}%" : "bottom:0px")};z-index:10005;background-color:var(--Grey);width:100%;";
        return $"position:absolute;top:30px;right:{(MapState.DialogType == DialogTypeEnum.None ? "0px" : MapState.WidthOfDialog)};z-index:1005;width:47px";
    }

}
