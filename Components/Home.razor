@inject MapStateService MapState
@inject IStringLocalizer<CommonResources> cl
@inject NavigationManager NavManager

<RadzenImage Path="images/home.png" Style="@style.ButtonStyle" title="@(cl["home"] + "...")" Click="(() => ShowHome())"></RadzenImage>

@code {
    [Parameter]
    public int Order { get; set; }

    [Parameter]
    public VerticalPositionEnum VerticalPosition { get; set; }

    [Parameter]
    public HorizontalPositionEnum HorizontalPosition { get; set; }

    (string ButtonStyle, string BoxStyle) style;

    protected override async Task OnInitializedAsync()
    {
        MapState.OnChange += OnMyChangeHandler;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            style = await MapState.GetStyleOfMapComponent(VerticalPosition, HorizontalPosition, Order);
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        MapState.OnChange -= OnMyChangeHandler;
    }

    private async void OnMyChangeHandler()
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    private void ShowHome()
    {
        NavManager.NavigateTo("/", true);
    }
}